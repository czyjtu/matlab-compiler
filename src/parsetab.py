
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'stmt_list_optrightEQleftEQEQGELEGTLTleftORANDleftPLUSleftMULDIVrightNEGrightPOWnonassocLPARENRPARENAND BREAK COMMA CONTINUE DIV ELSE ELSEIF END EQ EQEQ FUNCTION GE GT ID IF LE LPAREN LT MINUS MUL NEG NEWLINE NUMBER OR PLUS POW RPAREN SEMI STRING WHILE\n    while_stmt : WHILE expr stmt_list END\n    \n    stmt_list : stmt\n              | stmt_list stmt\n    \n    stmt : expr_stmt\n         | if_stmt\n         | while_stmt\n         | BREAK\n         | CONTINUE\n         | function_stmt\n    \n    expr_stmt : expr SEMI\n    \n    function_stmt : FUNCTION ID EQ function_declr stmt_list END\n    \n    function_declr : ID LPAREN args_opt RPAREN\n    \n    args_opt :\n            | args\n    \n    args : ID\n        | args COMMA ID\n    \n    stmt_list_opt :\n                  | stmt_list\n    \n    expr : LPAREN expr RPAREN\n    \n    expr : function_call\n    | ID\n    | NUMBER\n    | STRING\n    | expr1\n    | expr2\n    \n    function_call : ID LPAREN expr_list_opt RPAREN\n    \n    expr_list_opt :\n                | expr_list\n    \n    expr_list : expr\n            | expr_list COMMA expr\n    expr1 : NEG exprexpr2 : expr LT expr\n    | expr AND expr\n    | expr DIV expr\n    | expr POW expr\n    | expr GE expr\n    | expr GT expr\n    | expr LE expr\n    | expr MINUS expr\n    | expr MUL expr\n    | expr OR expr\n    | expr PLUS expr\n    | expr EQ expr\n    | expr EQEQ expr\n    \n    if_stmt : IF expr stmt_list_opt elseif_stmt END\n    \n    elseif_stmt :\n                | ELSE stmt_list_opt\n                | ELSEIF expr stmt_list_opt elseif_stmt\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,22,23,66,71,81,],[-17,0,-18,-2,-4,-5,-6,-7,-8,-9,-3,-10,-1,-45,-11,]),'BREAK':([0,2,3,4,5,6,7,8,9,14,16,17,18,19,20,22,23,37,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,62,64,66,68,69,71,73,75,81,83,],[7,7,-2,-4,-5,-6,-7,-8,-9,-21,-20,-22,-23,-24,-25,-3,-10,7,7,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,7,-19,7,-1,7,-26,-45,7,7,-11,-12,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,14,16,17,18,19,20,22,23,37,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,62,64,66,68,69,71,73,75,81,83,],[8,8,-2,-4,-5,-6,-7,-8,-9,-21,-20,-22,-23,-24,-25,-3,-10,8,8,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,8,-19,8,-1,8,-26,-45,8,8,-11,-12,]),'IF':([0,2,3,4,5,6,7,8,9,14,16,17,18,19,20,22,23,37,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,62,64,66,68,69,71,73,75,81,83,],[11,11,-2,-4,-5,-6,-7,-8,-9,-21,-20,-22,-23,-24,-25,-3,-10,11,11,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,11,-19,11,-1,11,-26,-45,11,11,-11,-12,]),'WHILE':([0,2,3,4,5,6,7,8,9,14,16,17,18,19,20,22,23,37,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,62,64,66,68,69,71,73,75,81,83,],[12,12,-2,-4,-5,-6,-7,-8,-9,-21,-20,-22,-23,-24,-25,-3,-10,12,12,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,12,-19,12,-1,12,-26,-45,12,12,-11,-12,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,14,16,17,18,19,20,22,23,37,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,62,64,66,68,69,71,73,75,81,83,],[13,13,-2,-4,-5,-6,-7,-8,-9,-21,-20,-22,-23,-24,-25,-3,-10,13,13,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,13,-19,13,-1,13,-26,-45,13,13,-11,-12,]),'LPAREN':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,62,64,65,66,67,68,69,70,71,73,75,81,83,],[15,15,-2,-4,-5,-6,-7,-8,-9,15,15,40,15,-20,-22,-23,-24,-25,15,-3,-10,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,15,-19,15,15,-1,74,15,-26,15,-45,15,15,-11,-12,]),'ID':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,62,64,65,66,68,69,70,71,73,74,75,81,83,84,],[14,14,-2,-4,-5,-6,-7,-8,-9,14,14,39,-21,14,-20,-22,-23,-24,-25,14,-3,-10,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,14,67,-19,14,14,-1,14,-26,14,-45,14,78,14,-11,-12,85,]),'NUMBER':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,62,64,65,66,68,69,70,71,73,75,81,83,],[17,17,-2,-4,-5,-6,-7,-8,-9,17,17,-21,17,-20,-22,-23,-24,-25,17,-3,-10,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,17,-19,17,17,-1,17,-26,17,-45,17,17,-11,-12,]),'STRING':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,62,64,65,66,68,69,70,71,73,75,81,83,],[18,18,-2,-4,-5,-6,-7,-8,-9,18,18,-21,18,-20,-22,-23,-24,-25,18,-3,-10,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,18,-19,18,18,-1,18,-26,18,-45,18,18,-11,-12,]),'NEG':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,62,64,65,66,68,69,70,71,73,75,81,83,],[21,21,-2,-4,-5,-6,-7,-8,-9,21,21,-21,21,-20,-22,-23,-24,-25,21,-3,-10,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,21,-19,21,21,-1,21,-26,21,-45,21,21,-11,-12,]),'ELSE':([2,3,4,5,6,7,8,9,14,16,17,18,19,20,22,23,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,62,66,69,71,73,77,81,],[-18,-2,-4,-5,-6,-7,-8,-9,-21,-20,-22,-23,-24,-25,-3,-10,-17,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,64,-19,-1,-26,-45,-17,64,-11,]),'ELSEIF':([2,3,4,5,6,7,8,9,14,16,17,18,19,20,22,23,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,62,66,69,71,73,77,81,],[-18,-2,-4,-5,-6,-7,-8,-9,-21,-20,-22,-23,-24,-25,-3,-10,-17,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,65,-19,-1,-26,-45,-17,65,-11,]),'END':([2,3,4,5,6,7,8,9,14,16,17,18,19,20,22,23,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,66,69,71,72,73,75,77,81,82,],[-18,-2,-4,-5,-6,-7,-8,-9,-21,-20,-22,-23,-24,-25,-3,-10,-17,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-46,66,-19,71,-17,-1,-26,-45,-47,-17,81,-46,-11,-48,]),'SEMI':([10,14,16,17,18,19,20,42,43,44,45,46,47,48,49,50,51,52,53,54,55,62,69,],[23,-21,-20,-22,-23,-24,-25,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-19,-26,]),'LT':([10,14,16,17,18,19,20,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,62,69,73,76,],[24,-21,-20,-22,-23,-24,-25,24,24,24,-31,-32,-33,-34,-35,-36,-37,-38,24,-40,-41,-42,24,-44,24,-19,-26,24,24,]),'AND':([10,14,16,17,18,19,20,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,62,69,73,76,],[25,-21,-20,-22,-23,-24,-25,25,25,25,-31,25,-33,-34,-35,25,25,25,25,-40,-41,-42,25,25,25,-19,-26,25,25,]),'DIV':([10,14,16,17,18,19,20,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,62,69,73,76,],[26,-21,-20,-22,-23,-24,-25,26,26,26,-31,26,26,-34,-35,26,26,26,26,-40,26,26,26,26,26,-19,-26,26,26,]),'POW':([10,14,16,17,18,19,20,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,62,69,73,76,],[27,-21,-20,-22,-23,-24,-25,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-19,-26,27,27,]),'GE':([10,14,16,17,18,19,20,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,62,69,73,76,],[28,-21,-20,-22,-23,-24,-25,28,28,28,-31,-32,-33,-34,-35,-36,-37,-38,28,-40,-41,-42,28,-44,28,-19,-26,28,28,]),'GT':([10,14,16,17,18,19,20,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,62,69,73,76,],[29,-21,-20,-22,-23,-24,-25,29,29,29,-31,-32,-33,-34,-35,-36,-37,-38,29,-40,-41,-42,29,-44,29,-19,-26,29,29,]),'LE':([10,14,16,17,18,19,20,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,62,69,73,76,],[30,-21,-20,-22,-23,-24,-25,30,30,30,-31,-32,-33,-34,-35,-36,-37,-38,30,-40,-41,-42,30,-44,30,-19,-26,30,30,]),'MINUS':([10,14,16,17,18,19,20,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,62,69,73,76,],[31,-21,-20,-22,-23,-24,-25,31,31,31,-31,-32,-33,-34,-35,-36,-37,-38,31,-40,-41,-42,-43,-44,31,-19,-26,31,31,]),'MUL':([10,14,16,17,18,19,20,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,62,69,73,76,],[32,-21,-20,-22,-23,-24,-25,32,32,32,-31,32,32,-34,-35,32,32,32,32,-40,32,32,32,32,32,-19,-26,32,32,]),'OR':([10,14,16,17,18,19,20,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,62,69,73,76,],[33,-21,-20,-22,-23,-24,-25,33,33,33,-31,33,-33,-34,-35,33,33,33,33,-40,-41,-42,33,33,33,-19,-26,33,33,]),'PLUS':([10,14,16,17,18,19,20,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,62,69,73,76,],[34,-21,-20,-22,-23,-24,-25,34,34,34,-31,34,34,-34,-35,34,34,34,34,-40,34,-42,34,34,34,-19,-26,34,34,]),'EQ':([10,14,16,17,18,19,20,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,62,69,73,76,],[35,-21,-20,-22,-23,-24,-25,35,35,58,35,-31,-32,-33,-34,-35,-36,-37,-38,35,-40,-41,-42,35,-44,35,-19,-26,35,35,]),'EQEQ':([10,14,16,17,18,19,20,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,62,69,73,76,],[36,-21,-20,-22,-23,-24,-25,36,36,36,-31,-32,-33,-34,-35,-36,-37,-38,36,-40,-41,-42,36,-44,36,-19,-26,36,36,]),'RPAREN':([14,16,17,18,19,20,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,62,69,74,76,78,79,80,85,],[-21,-20,-22,-23,-24,-25,-27,62,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,69,-28,-29,-19,-26,-13,-30,-15,83,-14,-16,]),'COMMA':([14,16,17,18,19,20,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,61,62,69,76,78,80,85,],[-21,-20,-22,-23,-24,-25,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,70,-29,-19,-26,-30,-15,84,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmt_list_opt':([0,37,64,73,],[1,56,72,77,]),'stmt_list':([0,37,38,64,68,73,],[2,2,57,2,75,2,]),'stmt':([0,2,37,38,57,64,68,73,75,],[3,22,3,3,22,3,3,3,22,]),'expr_stmt':([0,2,37,38,57,64,68,73,75,],[4,4,4,4,4,4,4,4,4,]),'if_stmt':([0,2,37,38,57,64,68,73,75,],[5,5,5,5,5,5,5,5,5,]),'while_stmt':([0,2,37,38,57,64,68,73,75,],[6,6,6,6,6,6,6,6,6,]),'function_stmt':([0,2,37,38,57,64,68,73,75,],[9,9,9,9,9,9,9,9,9,]),'expr':([0,2,11,12,15,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,57,64,65,68,70,73,75,],[10,10,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,10,10,61,10,10,73,10,76,10,10,]),'function_call':([0,2,11,12,15,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,57,64,65,68,70,73,75,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'expr1':([0,2,11,12,15,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,57,64,65,68,70,73,75,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'expr2':([0,2,11,12,15,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,57,64,65,68,70,73,75,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'expr_list_opt':([40,],[59,]),'expr_list':([40,],[60,]),'elseif_stmt':([56,77,],[63,82,]),'function_declr':([58,],[68,]),'args_opt':([74,],[79,]),'args':([74,],[80,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> stmt_list_opt","S'",1,None,None,None),
  ('while_stmt -> WHILE expr stmt_list END','while_stmt',4,'p_while_stmt','my_parser.py',36),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','my_parser.py',43),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list','my_parser.py',44),
  ('stmt -> expr_stmt','stmt',1,'p_stmt','my_parser.py',54),
  ('stmt -> if_stmt','stmt',1,'p_stmt','my_parser.py',55),
  ('stmt -> while_stmt','stmt',1,'p_stmt','my_parser.py',56),
  ('stmt -> BREAK','stmt',1,'p_stmt','my_parser.py',57),
  ('stmt -> CONTINUE','stmt',1,'p_stmt','my_parser.py',58),
  ('stmt -> function_stmt','stmt',1,'p_stmt','my_parser.py',59),
  ('expr_stmt -> expr SEMI','expr_stmt',2,'p_expr_stmt','my_parser.py',66),
  ('function_stmt -> FUNCTION ID EQ function_declr stmt_list END','function_stmt',6,'p_function_stmt','my_parser.py',73),
  ('function_declr -> ID LPAREN args_opt RPAREN','function_declr',4,'p_function_declr','my_parser.py',80),
  ('args_opt -> <empty>','args_opt',0,'p_args_opt','my_parser.py',87),
  ('args_opt -> args','args_opt',1,'p_args_opt','my_parser.py',88),
  ('args -> ID','args',1,'p_args','my_parser.py',98),
  ('args -> args COMMA ID','args',3,'p_args','my_parser.py',99),
  ('stmt_list_opt -> <empty>','stmt_list_opt',0,'p_stmt_list_opt','my_parser.py',109),
  ('stmt_list_opt -> stmt_list','stmt_list_opt',1,'p_stmt_list_opt','my_parser.py',110),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_parens_expr','my_parser.py',120),
  ('expr -> function_call','expr',1,'p_expr','my_parser.py',127),
  ('expr -> ID','expr',1,'p_expr','my_parser.py',128),
  ('expr -> NUMBER','expr',1,'p_expr','my_parser.py',129),
  ('expr -> STRING','expr',1,'p_expr','my_parser.py',130),
  ('expr -> expr1','expr',1,'p_expr','my_parser.py',131),
  ('expr -> expr2','expr',1,'p_expr','my_parser.py',132),
  ('function_call -> ID LPAREN expr_list_opt RPAREN','function_call',4,'p_function_call','my_parser.py',139),
  ('expr_list_opt -> <empty>','expr_list_opt',0,'p_expr_args_opt','my_parser.py',146),
  ('expr_list_opt -> expr_list','expr_list_opt',1,'p_expr_args_opt','my_parser.py',147),
  ('expr_list -> expr','expr_list',1,'p_expr_args','my_parser.py',157),
  ('expr_list -> expr_list COMMA expr','expr_list',3,'p_expr_args','my_parser.py',158),
  ('expr1 -> NEG expr','expr1',2,'p_expr1','my_parser.py',167),
  ('expr2 -> expr LT expr','expr2',3,'p_expr2','my_parser.py',172),
  ('expr2 -> expr AND expr','expr2',3,'p_expr2','my_parser.py',173),
  ('expr2 -> expr DIV expr','expr2',3,'p_expr2','my_parser.py',174),
  ('expr2 -> expr POW expr','expr2',3,'p_expr2','my_parser.py',175),
  ('expr2 -> expr GE expr','expr2',3,'p_expr2','my_parser.py',176),
  ('expr2 -> expr GT expr','expr2',3,'p_expr2','my_parser.py',177),
  ('expr2 -> expr LE expr','expr2',3,'p_expr2','my_parser.py',178),
  ('expr2 -> expr MINUS expr','expr2',3,'p_expr2','my_parser.py',179),
  ('expr2 -> expr MUL expr','expr2',3,'p_expr2','my_parser.py',180),
  ('expr2 -> expr OR expr','expr2',3,'p_expr2','my_parser.py',181),
  ('expr2 -> expr PLUS expr','expr2',3,'p_expr2','my_parser.py',182),
  ('expr2 -> expr EQ expr','expr2',3,'p_expr2','my_parser.py',183),
  ('expr2 -> expr EQEQ expr','expr2',3,'p_expr2','my_parser.py',184),
  ('if_stmt -> IF expr stmt_list_opt elseif_stmt END','if_stmt',5,'p_if_stmt','my_parser.py',191),
  ('elseif_stmt -> <empty>','elseif_stmt',0,'p_elseif_stmt','my_parser.py',198),
  ('elseif_stmt -> ELSE stmt_list_opt','elseif_stmt',2,'p_elseif_stmt','my_parser.py',199),
  ('elseif_stmt -> ELSEIF expr stmt_list_opt elseif_stmt','elseif_stmt',4,'p_elseif_stmt','my_parser.py',200),
]
